codigo de itemcount en itemlistcontainer
    <ItemCount initial={1} stock={10} onAdd={miOnAdd} />

npm i react-toastify

import {ToastContainer, toast}  from "react-toastify"
import "react-toastify/dist/ReactToastify.css"

VA TODO CON PROPS  Y FUNCIONAN COMO FUNCIONES "toast.error("aca el texto");

Mirar la documentacion!!!


React es uns SPA??  nav y footer quedan estatico y es solo main quien cambia.


CLASE 8 DESDE AHORA ABAJO
_________________
21:48 demos de Marilu https://tympanus.net/Development/CreativeLinkEffects/
mirar las demos
<link>es como un a</link>
<navlink>igual pero se activa una clase cuando este activo "active"</navlink>

____________________
Lo que esta dentro de main que sea dinamico!! 
_____________________
<routes>sus hijos directos son "<route/>", tantos "route" como url</routes>

____________________
para CSS link = a, 
______________________
ESTO ES POCO ESCALABLE!!

import Carrito from "./carrito";
import ItemDetailContainer "./ItemDetailContainer";


<routes>
      <route path="/" element={ACA TAMBIEN EL ILC}/>
      <route path="/categoria/:nombreIrrelevante element={ACA TAMBIEN EL ILC}/>
      <route path="/carrito" element={<Carrito/>}/>   ////EJEMPLO CARRITO
      <route path="/item/:id  element={<ItemDetailContainer/>}>    ///ACA LOS DETALLES CREO

</routes>

PUSO "ELEMENT" EN TODOS, hay dentro import todos los componenetes
<ItemDetailContainer/> EN TODOS POR AHORA 22:!6 PARA NO REPETIR CODIGO EN TODOS LADOS

CLASE 9
----------------------------


else if por las dudas

else if (id == "ofertas") {const ofertas = listaProductos.filter((producto) => producto.categoria == "ofertas");setProductos(ofertas)}



        COPIA DE SEGURIDAD POR LAS dudas


        getProductos()
      .then((resolve) => {
        if (id == "tendencia") {
          const tendencia = listaProductos.filter(
            (producto) => producto.categoria == "tendencia"
          );
          setProductos(tendencia);
        } else {
          setProductos(listaProductos);
        }
        // setProductos(resolve);
        // setCargando(true);
      })
      .catch((error) => {
        toast.error("Error al cargar los productos ");
      });
  }, [id]);

  if (!cargando) {
    return <div>...Cargando</div>;
  } else {
    return (
      <div className="itemContainer">
        <ItemList productos={productos} />
      </div>
    );
  }
};

export default ItemListContainer;



_______________________________________________________
clase 11

const test = () => {

const [toggle, setToggle] = useState(false)

const toggleText = () => {
  setToggle(!toggle)
}

return (
  <>
  <button onClick={toggleText}>toggle</button>
  {toogle ? <p>true</p> : <p>false</p>}
)

MAL ESTO UN LIO










  <button onClick={toggleText}>toggle</button>
)

}

_------------------------------------------
codigo resguerdo item count mio

return (
    <div className="itemCount">
      <div className="itemCountBtn">
        <button className="resta" onClick={restar}>
          <FontAwesomeIcon icon={faMinus} />
        </button>
        <p> {contador} Unidad/es</p>
        <button className="suma" onClick={sumar}>
          <FontAwesomeIcon icon={faPlus} />
        </button>
      </div>
      <button className="itemCountAgregar" onClick={agregarCarrito}>
        Agregar al carrito
      </button>
    </div>
  );


  _______________________________________________________
  codigo borrado para firebase clase 12
=======================================================
  itemlistcontainer:
=======================================================
  // useEffect(() => {
  //   const getProductos = () => {
  //     return new Promise((resolve, reject) => {
  //       setTimeout(() => {
  //         // console.log(id); comentado porque lo uso y no tiene sentido un toasty para esto.
  //         resolve(listaProductos);
  //       }, 2000);
  //     });
  //   };

  //   getProductos()
  //     .then((resolve) => {
  //       if (id == "tendencia") {
  //         const tendencia = listaProductos.filter(
  //           (producto) => producto.categoria == "tendencia"
  //         );
  //         setProductos(tendencia);
  //         setCargando(true);
  //       } else if (id == "ofertas") {
  //         const ofertas = listaProductos.filter(
  //           (producto) => producto.categoria == "ofertas"
  //         );
  //         setProductos(ofertas);
  //         setCargando(true);
  //       } else {
  //         setProductos(resolve);
  //         setCargando(true);
  //       }
  //     })
  //     .catch((error) => {
  //       toast.error("Error al cargar los productos ");
  //     });
  // }, [id]);

  y el return tambien....
    if (!cargando) {
    return <div>...Cargando</div>;
  } else {
    return (
      <div className="itemContainer">
        <ItemList productos={productos} />
      </div>
    );
  }
};

________________________________________________________________

array anterior de productos
// export let listaProductos = [
//   {
//     id: 1,
//     titulo: "Producto 1 (Tendencia)",
//     stock: 10,
//     precio: 50,
//     categoria: "tendencia",
//     imagen: "https://picsum.photos/200/200",
//   },
//   {
//     id: 2,
//     titulo: "Producto 2 (Tendencia)",
//     stock: 10,
//     precio: 50,
//     categoria: "tendencia",
//     imagen: "https://picsum.photos/200/200",
//   },
//   {
//     id: 3,
//     titulo: "Producto 3 (Tendencia)",
//     stock: 10,
//     precio: 50,
//     categoria: "tendencia",
//     imagen: "https://picsum.photos/200/200",
//   },
//   {
//     id: 4,
//     titulo: "Producto 4 (Tendencia)",
//     stock: 10,
//     precio: 50,
//     categoria: "tendencia",
//     imagen: "https://picsum.photos/200/200",
//   },
//   {
//     id: 5,
//     titulo: "Producto 5 (Tendencia)",
//     stock: 10,
//     precio: 50,
//     categoria: "tendencia",
//     imagen: "https://picsum.photos/200/200",
//   },
//   {
//     id: 6,
//     titulo: "Producto 6 (ofertas)",
//     stock: 10,
//     precio: 50,
//     categoria: "ofertas",
//     imagen: "https://picsum.photos/200/200",
//   },
//   {
//     id: 7,
//     titulo: "Producto 7 (ofertas)",
//     stock: 10,
//     precio: 50,
//     categoria: "ofertas",
//     imagen: "https://picsum.photos/200/200",
//   },
//   {
//     id: 8,
//     titulo: "Producto 8 (ofertas)",
//     stock: 10,
//     precio: 50,
//     categoria: "ofertas",
//     imagen: "https://picsum.photos/200/200",
//   },
//   {
//     id: 9,
//     titulo: "Producto 9 (ofertas)",
//     stock: 10,
//     precio: 50,
//     categoria: "ofertas",
//     imagen: "https://picsum.photos/200/200",
//   },
//   {
//     id: 10,
//     titulo: "Producto 10 (ofertas)",
//     stock: 10,
//     precio: 50,
//     categoria: "ofertas",
//     imagen: "https://picsum.photos/200/200",
//   },
// ];


===================================
el ItemDetailContainer borrado por clase 12
const ItemDetailContainer = (props) => {
  const [item, setItem] = useState({});
  const [cargando, setCargando] = useState(false);
  const { id } = useParams();

  useEffect(() => {
    const getItem = () => {
      return new Promise((resolve, reject) => {
        setTimeout(() => {
          resolve(listaProductos);
        }, 2000);
      });
    };

    getItem()
      .then((resolve) => {
        setItem(resolve.find((product) => product.id === +id));
        setCargando(true);
      })
      .catch((error) => toast.error(error));
  }, []);

  if (!cargando) {
    return <div>Esperando respuesta del Servidor...</div>;
  } else {
    return (
      <div className="itemDetailContainer">
        <ItemDetail item={item} />
      </div>
    );
  }
};





// useEffect(() => {
//   const legoCollection = collection(dbFirebase, "productos");
//   const documentos = getDocs(legoCollection);

//   documentos
//     .then((respuesta) => {
//       const aux = [];

//       respuesta.forEach((documento) => {
//         const lego = {
//           id: documento.id,
//           ...documento.data(),
//         };

//         aux.push(lego);
//       });

//       console.log(aux);
//       // setProductos(aux);
//     })
//     .catch(() => {
//       toast.error("algo paso con tu base de datos");
//     });
// });

// MI CODIGO ANTERIOR
// useEffect(() => {
//   const getItem = () => {
//     return new Promise((resolve, reject) => {
//       setTimeout(() => {
//         resolve(listaProductos);
//       }, 2000);
//     });
//   };

//   getItem()
//     .then((resolve) => {
//       setItem(resolve.find((product) => product.id === +id));
//       setCargando(true);
//     })
//     .catch((error) => toast.error(error));
// }, []);

// if (!cargando) {
//   return <div>Esperando respuesta del Servidor...</div>;
// } else {
//   return (
//     <div className="itemDetailContainer">
//       <ItemDetail item={item} />
//     </div>
//   );
// }
// };

// CODIGO DE AHORA 15:44
// useEffect(() => {
//   const docRef = doc(dbFirebase, "productos", id);
//   getDoc(docRef).then((res) => setProducto(res.data()));
// }, [id]);
